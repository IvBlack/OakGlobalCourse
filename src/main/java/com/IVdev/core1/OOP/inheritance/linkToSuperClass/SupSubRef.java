package com.IVdev.core1.OOP.inheritance.linkToSuperClass;

/*
    Тип ссылочной переменной, а не тип объекта, на который она ссылается, определяет,
    к каким членам можно получать доступ. Другими словами, когда ссылочной переменной типа
    суперкласса присваивается ссылка на объект подкласса , то доступ имеется только к тем частям объекта ,
    которые определены в суперклассе . Вот почему переменная с2 не может получить
    доступ к b, даже если она ссылается на объект D. Если подумать, то смысл
    станет очевидным, т.к. суперклассу ничего не известно о том, что именно к нему
    добавляет подкласс.
* */
public class SupSubRef {
    public static void main(String[] args) {
        C c = new C(10);
        C c2;
        D d = new D(5, 6);

        c2 = c;
        System.out.println("c2.a = " + c2.a);
        c2 = d; //тоже ok
        System.out.println("c2.a = " + c2.a);

        c2.a = 19;
//        c2.b = 27; // тут уже ошибка, нет такого члена в С
    }
}


class C {
    int a;
    C(int i) { a = i; }
}
class D extends C {
    int b;
    D(int i, int j) {
        super(j);
        b = i;
    }
}

