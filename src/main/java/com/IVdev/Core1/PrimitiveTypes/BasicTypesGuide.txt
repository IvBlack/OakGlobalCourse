Java - строго типизированный язык.
А это значит, что каждая переменная и константа представляет определенный тип и данный тип строго определен. 
Тип данных определяет диапазон значений, которые может хранить переменная или константа.

Система встроенных базовых типов данных, которая используется для создания переменных в Java:

- boolean: хранит значение true или false:
    boolean isActive = false;
    boolean isAlive = true;

- byte: хранит целое число от -128 до 127 и занимает 1 байт:
    byte a = 3;
    byte b = 8;

- short: хранит целое число от -32768 до 32767 и занимает 2 байта:
    short a = 3;
    short b = 8;

- int: хранит целое число от -2147483648 до 2147483647 и занимает 4 байта:
    int a = 4;
    int b = 9;

    Другие системы счисления:
    int num111 = 0x6F; // 16-теричная система, число 111
    int num8 = 010; // 8-ричная система, число 8
    int num13 = 0b1101; // 2-ичная система, число 13

- long: хранит целое число от –9 223 372 036 854 775 808 до 9 223 372 036 854 775 807 и занимает 8 байт:
    long a = 5;
    long b = 10;

Числа с плавающей точкой представляют десятичные значения с дробной частью - float и double.
Они могут быть выражены в стандартной или экспоненциальной (научной) форме записи.
- double: хранит число с плавающей точкой от ±4.9*10-324 до ±1.7976931348623157*10308 и занимает 8 байт.
    В качестве разделителя целой и дробной части в дробных литералах используется точка:
    double x = 8.5;
    double y =  0.8869;

Начиная с версии JDK 7 в литералы с плавающей точкой можно вводить один знак подчеркивания или больше:
    double number = 123_456_789.256;

Знаки подчеркивания допустимо также указывать в дробной ча­сти числа:
    double number = 123_456_789.2_5_7;


- float: хранит число с плавающей точкой от -3.4*1038 до 3.4*1038 и занимает 4 байта:
    float x = 8.5F;
    float y = 2.7F;

- char: хранит одиночный символ в кодировке UTF-16 и занимает 2 байта, поэтому диапазон хранимых значений от 0 до 65535.
    переменной символьного типа также можно присвоить целочисленное значение от 0 до 65535. 
    В этом случае переменная опять же будет хранить символ, а целочисленное значение будет указывать 
    на номер символа в таблице символов Unicode (UTF-16).

    char ch=102; // символ 'f'
    System.out.println(ch);

    Еще одной формой задания символьных переменных является шестнадцатеричная форма: переменная получает значение в
    шестнадцатеричной форме, которое следует после символов "\u". 
    Например, char ch='\u0066'; опять же будет хранить символ 'f'.

    Символьные переменные не стоит путать со строковыми, 'a' не идентично "a". 



При этом переменная может принимать только те значения, которые соответствуют ее типу. 
Если переменная представляет целочисленный тип, то она не может хранить дробные числа.